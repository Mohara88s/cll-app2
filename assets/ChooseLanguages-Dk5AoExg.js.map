{"version":3,"file":"ChooseLanguages-Dk5AoExg.js","sources":["../../src/redux/joke-tasks/joke-tasks-selectors.js","../../src/redux/joke-tasks/joke-tasks-operations.js","../../src/components/ChooseLanguages/ChooseLanguages.jsx"],"sourcesContent":["const getJokeTasksFilter = state => state.jokeTasks.filter;\nconst getJokeTask = state => state.jokeTasks.jokeTask;\nconst getJokeTasks = state => state.jokeTasks.tasks;\nconst getJokeTasksLoading = state => state.jokeTasks.loading;\nconst getJokeTasksError = state => state.jokeTasks.error;\nconst getJokeTasksLanguagesError = state => state.jokeTasks.languagesError;\nconst getJokeTasksLanguagesLoading = state => state.jokeTasks.languagesLoading;\nconst getJokeTasksLanguages = state => state.jokeTasks.languages;\nconst getOriginalLanguage = state => state.jokeTasks.originalLanguage;\nconst getTranslationLanguage = state => state.jokeTasks.translationLanguage;\n\nconst jokeTasksSelectors = {\n  getJokeTasksFilter,\n  getJokeTask,\n  getJokeTasks,\n  getJokeTasksLoading,\n  getJokeTasksError,\n  getJokeTasksLanguagesError,\n  getJokeTasksLanguagesLoading,\n  getJokeTasksLanguages,\n  getOriginalLanguage,\n  getTranslationLanguage,\n};\nexport default jokeTasksSelectors;\n","import {\n  fetchJokeTasksRequest,\n  fetchJokeTasksSuccess,\n  fetchJokeTasksError,\n  fetchJokeTasksLanguagesRequest,\n  fetchJokeTasksLanguagesSuccess,\n  fetchJokeTasksLanguagesError,\n  addJokeTaskRequest,\n  addJokeTaskSuccess,\n  addJokeTaskError,\n  deleteJokeTaskRequest,\n  deleteJokeTaskSuccess,\n  deleteJokeTaskError,\n  updateJokeTaskRequest,\n  updateJokeTaskSuccess,\n  updateJokeTaskError,\n} from './joke-tasks-actions';\nimport axios from 'axios';\n\nexport const fetchJokeTasks =\n  (query, originalLanguage, translationLanguage, page = 1, limit = 20) =>\n  async dispatch => {\n    dispatch(fetchJokeTasksRequest());\n    try {\n      const { data } = await axios.get(\n        `/joke-tasks?page=${page}&limit=${limit}&query=${query}&original_language=${originalLanguage}&translation_language=${translationLanguage}`,\n      );\n      dispatch(fetchJokeTasksSuccess(data.tasks));\n    } catch (error) {\n      dispatch(\n        fetchJokeTasksError(\n          error.response ? error.response.data.message : error.message,\n        ),\n      );\n    }\n  };\n\nexport const fetchJokeTasksLanguages = () => async dispatch => {\n  dispatch(fetchJokeTasksLanguagesRequest());\n  try {\n    const { data } = await axios.get(`/joke-tasks/languages`);\n    dispatch(fetchJokeTasksLanguagesSuccess(data.languages));\n  } catch (error) {\n    dispatch(\n      fetchJokeTasksLanguagesError(\n        error.response ? error.response.data.message : error.message,\n      ),\n    );\n  }\n};\n\nexport const addJokeTask = task => async dispatch => {\n  dispatch(addJokeTaskRequest());\n  try {\n    const { data } = await axios.post(`/joke-tasks`, task);\n    dispatch(addJokeTaskSuccess(data));\n  } catch (error) {\n    dispatch(\n      addJokeTaskError(\n        error.response ? error.response.data.message : error.message,\n      ),\n    );\n  }\n};\n\nexport const deleteJokeTask = taskId => async dispatch => {\n  dispatch(deleteJokeTaskRequest());\n  try {\n    const { data } = await axios.delete(`/joke-tasks/${taskId}`);\n    dispatch(deleteJokeTaskSuccess(data));\n  } catch (error) {\n    dispatch(\n      deleteJokeTaskError(\n        error.response ? error.response.data.message : error.message,\n      ),\n    );\n  }\n};\n\nexport const updateJokeTask =\n  ({ taskId, update }) =>\n  async dispatch => {\n    dispatch(updateJokeTaskRequest());\n    try {\n      const { data } = await axios.put(`/joke-tasks/${taskId}`, update);\n      dispatch(updateJokeTaskSuccess(data));\n    } catch (error) {\n      dispatch(\n        updateJokeTaskError(\n          error.response ? error.response.data.message : error.message,\n        ),\n      );\n    }\n  };\n","import { Button } from 'react-bootstrap';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport jokeTasksSelectors from '../../redux/joke-tasks/joke-tasks-selectors';\nimport { fetchJokeTasksLanguages } from '../../redux/joke-tasks/joke-tasks-operations';\nimport {\n  setOriginalLanguage,\n  setTranslationLanguage,\n} from '../../redux/joke-tasks/joke-tasks-actions';\nimport ErrorMessage from '../ErrorMessage/ErrorMessage';\nimport styles from './ChooseLanguages.module.css';\n\nexport default function ChooseLanguages() {\n  const dispatch = useDispatch();\n\n  const languages = useSelector(jokeTasksSelectors.getJokeTasksLanguages);\n  const languagesError = useSelector(\n    jokeTasksSelectors.getJokeTasksLanguagesError,\n  );\n  // const languagesLoading = useSelector(\n  //   jokeTasksSelectors.getJokeTasksLanguagesLoading,\n  // );\n  const originalLanguage = useSelector(jokeTasksSelectors.getOriginalLanguage);\n  const translationLanguage = useSelector(\n    jokeTasksSelectors.getTranslationLanguage,\n  );\n\n  useEffect(() => {\n    dispatch(fetchJokeTasksLanguages());\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (originalLanguage === null) dispatch(setOriginalLanguage(languages[0]));\n    if (translationLanguage === null)\n      dispatch(setTranslationLanguage(languages[languages.length - 1]));\n    // eslint-disable-next-line\n  }, [dispatch, languages]);\n\n  const onClickButtonOriginalLanguage = e => {\n    const { value } = e.currentTarget;\n    const language = languages.find(e => e.language_name === value);\n    dispatch(setOriginalLanguage(language));\n  };\n\n  const onClickButtonTranslationLanguage = e => {\n    const { value } = e.currentTarget;\n    const language = languages.find(e => e.language_name === value);\n    dispatch(setTranslationLanguage(language));\n  };\n\n  return (\n    <div className={styles.ChooseLanguages}>\n      <ul className={styles.ChooseLanguagesList}>\n        <li>\n          <h3>Choose original language:</h3>\n          {originalLanguage && (\n            <ul className={styles.languagesList}>\n              {languages.map(elem => (\n                <li key={elem._id + 1} className={styles.languagesList__item}>\n                  <Button\n                    variant={\n                      elem.language_name === originalLanguage.language_name\n                        ? 'primary'\n                        : 'secondary'\n                    }\n                    size={\n                      elem.language_name === originalLanguage.language_name\n                        ? 'lg'\n                        : ''\n                    }\n                    onClick={onClickButtonOriginalLanguage}\n                    value={elem.language_name}\n                    className={\n                      elem.language_name === originalLanguage.language_name\n                        ? styles.languagesList__activeButton\n                        : styles.languagesList__button\n                    }\n                  >\n                    {elem.language_name}\n                  </Button>\n                </li>\n              ))}\n            </ul>\n          )}\n        </li>\n        <li>\n          <h3>Choose translation language:</h3>\n          {translationLanguage && (\n            <ul className={styles.languagesList}>\n              {languages.map(elem => (\n                <li key={elem._id + 2} className={styles.languagesList__item}>\n                  <Button\n                    variant={\n                      elem.language_name === translationLanguage.language_name\n                        ? 'primary'\n                        : 'secondary'\n                    }\n                    size={\n                      elem.language_name === translationLanguage.language_name\n                        ? 'lg'\n                        : ''\n                    }\n                    onClick={onClickButtonTranslationLanguage}\n                    value={elem.language_name}\n                    className={\n                      elem.language_name === translationLanguage.language_name\n                        ? styles.languagesList__ActiveButton\n                        : styles.languagesList__Button\n                    }\n                  >\n                    {elem.language_name}\n                  </Button>\n                </li>\n              ))}\n            </ul>\n          )}\n        </li>\n      </ul>\n      {languagesError && <ErrorMessage message={languagesError} />}\n    </div>\n  );\n}\n"],"names":["getJokeTasksFilter","state","getJokeTask","getJokeTasks","getJokeTasksLoading","getJokeTasksError","getJokeTasksLanguagesError","getJokeTasksLanguagesLoading","getJokeTasksLanguages","getOriginalLanguage","getTranslationLanguage","jokeTasksSelectors","fetchJokeTasks","query","originalLanguage","translationLanguage","page","limit","dispatch","fetchJokeTasksRequest","data","axios","fetchJokeTasksSuccess","error","fetchJokeTasksError","fetchJokeTasksLanguages","fetchJokeTasksLanguagesRequest","fetchJokeTasksLanguagesSuccess","fetchJokeTasksLanguagesError","addJokeTask","task","addJokeTaskRequest","addJokeTaskSuccess","addJokeTaskError","deleteJokeTask","taskId","deleteJokeTaskRequest","deleteJokeTaskSuccess","deleteJokeTaskError","updateJokeTask","update","updateJokeTaskRequest","updateJokeTaskSuccess","updateJokeTaskError","ChooseLanguages","useDispatch","languages","useSelector","languagesError","useEffect","setOriginalLanguage","setTranslationLanguage","onClickButtonOriginalLanguage","e","value","language","onClickButtonTranslationLanguage","jsxs","styles","jsx","elem","Button","ErrorMessage"],"mappings":"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"}