{"version":3,"file":"JokesTrainingsView-DNjTJUiX.js","sources":["../../src/components/ChooseTaskLanguages/ChooseTaskLanguages.jsx","../../src/components/JokeTraining/JokeTraining.jsx","../../src/components/JokesTrainingsPage/JokesTrainingsPage.jsx","../../src/views/JokesTrainingsView/JokesTrainingsView.jsx"],"sourcesContent":["import { Button } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport jokeTasksSelectors from '../../redux/joke-tasks/joke-tasks-selectors';\nimport {\n  setOriginalLanguage,\n  setTranslationLanguage,\n} from '../../redux/joke-tasks/joke-tasks-actions';\nimport styles from './ChooseTaskLanguages.module.css';\n\nexport default function ChooseTaskLanguages({ languages }) {\n  const dispatch = useDispatch();\n  const originalLanguage = useSelector(jokeTasksSelectors.getOriginalLanguage);\n  const translationLanguage = useSelector(\n    jokeTasksSelectors.getTranslationLanguage,\n  );\n\n  const onClickButtonOriginalLanguage = e => {\n    const { value } = e.currentTarget;\n    const language = languages.find(e => e.language_name === value);\n    dispatch(setOriginalLanguage(language));\n  };\n\n  const onClickButtonTranslationLanguage = e => {\n    const { value } = e.currentTarget;\n    const language = languages.find(e => e.language_name === value);\n    dispatch(setTranslationLanguage(language));\n  };\n\n  return (\n    <div className={styles.ChooseTaskLanguages}>\n      <ul className={styles.ChooseTaskLanguagesList}>\n        <li>\n          <h3>Choose original language:</h3>\n          {originalLanguage && (\n            <ul className={styles.languagesList}>\n              {languages.map(elem => (\n                <li key={elem._id + 1} className={styles.languagesList__item}>\n                  <Button\n                    variant={\n                      elem.language_name === originalLanguage.language_name\n                        ? 'primary'\n                        : 'secondary'\n                    }\n                    size={\n                      elem.language_name === originalLanguage.language_name\n                        ? 'lg'\n                        : ''\n                    }\n                    onClick={onClickButtonOriginalLanguage}\n                    value={elem.language_name}\n                    className={\n                      elem.language_name === originalLanguage.language_name\n                        ? styles.languagesList__ActiveButton\n                        : styles.languagesList__Button\n                    }\n                  >\n                    {elem.language_name}\n                  </Button>\n                </li>\n              ))}\n            </ul>\n          )}\n        </li>\n        <li>\n          <h3>Choose translation language:</h3>\n          {translationLanguage && (\n            <ul className={styles.languagesList}>\n              {languages.map(elem => (\n                <li key={elem._id + 2} className={styles.languagesList__item}>\n                  <Button\n                    variant={\n                      elem.language_name === translationLanguage.language_name\n                        ? 'primary'\n                        : 'secondary'\n                    }\n                    size={\n                      elem.language_name === translationLanguage.language_name\n                        ? 'lg'\n                        : ''\n                    }\n                    onClick={onClickButtonTranslationLanguage}\n                    value={elem.language_name}\n                    className={\n                      elem.language_name === translationLanguage.language_name\n                        ? styles.languagesList__ActiveButton\n                        : styles.languagesList__Button\n                    }\n                  >\n                    {elem.language_name}\n                  </Button>\n                </li>\n              ))}\n            </ul>\n          )}\n        </li>\n      </ul>\n    </div>\n  );\n}\n","import { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Button } from 'react-bootstrap';\nimport styles from './JokeTraining.module.css';\nimport { fetchSentencesTasksByJokeTaskId } from '../../redux/sentences-tasks/sentences-tasks-operations';\nimport jokeTasksSelectors from '../../redux/joke-tasks/joke-tasks-selectors';\nimport ChooseTaskLanguages from '../ChooseTaskLanguages/ChooseTaskLanguages';\nimport TaskCongratulation from '../TaskCongratulation/TaskCongratulation';\nimport { useNavigate } from 'react-router-dom';\n\nexport default function JokeTraining({ jokeTask, onResolvedTraining }) {\n  let history = useNavigate();\n  const dispatch = useDispatch();\n  const [taskLanguages, setTaskLanguages] = useState([]);\n  const [originalLanguageJoke, setOriginalLanguageJoke] = useState('');\n  const [translationArray, setTranslationArray] = useState([]);\n  const [mixedArray, setMixedArray] = useState([]);\n  const [resolvedArray, setResolvedArray] = useState([]);\n  const [actualId, setActualId] = useState(0);\n  const [losts, setLosts] = useState(0);\n  const [attempts, setAttempts] = useState(0);\n  const [resolved, setResolved] = useState(false);\n\n  const originalLanguage = useSelector(jokeTasksSelectors.getOriginalLanguage);\n  const translationLanguage = useSelector(\n    jokeTasksSelectors.getTranslationLanguage,\n  );\n  useEffect(() => {\n    setTaskLanguages(jokeTask.languages);\n  }, [jokeTask]);\n\n  useEffect(() => {\n    setOriginalLanguageJoke(\n      jokeTask.translations.find(\n        translation =>\n          translation.language.language_name === originalLanguage.language_name,\n      ).text,\n    );\n\n    setMixedArray([]);\n    setResolvedArray([]);\n    setActualId(0);\n    setLosts(0);\n    setAttempts(0);\n\n    setTranslationArray([\n      ...jokeTask.translations\n        .find(\n          translation =>\n            translation.language.language_name ===\n            translationLanguage.language_name,\n        )\n        .text.match(/[^.?!]+[.!?]+[\\])'\"`’”]*|.+/g)\n        .map(e => (e[0] === ' ' ? e.slice(1) : e)),\n    ]);\n  }, [jokeTask, originalLanguage, translationLanguage]);\n\n  useEffect(() => {\n    setMixedArray([\n      ...[...translationArray].sort(() => {\n        return 0.5 - Math.random();\n      }),\n    ]);\n  }, [translationArray]);\n\n  const onClickSentenceButton = e => {\n    const buttonValue = e.currentTarget.getAttribute('value');\n    const id = Number.parseInt(e.currentTarget.getAttribute('data-id'));\n\n    if (buttonValue === translationArray[actualId]) {\n      onRightButtonClick(e.currentTarget, id, buttonValue);\n    } else {\n      onWrongButtonClick(e.currentTarget);\n    }\n    setAttempts(prevState => prevState + 1);\n    if (actualId >= translationArray.length - 1) {\n      onPositiveTrainingResult();\n    }\n  };\n\n  const onWrongButtonClick = button => {\n    setLosts(prevState => prevState + 1);\n    button.classList.remove('btn-primary');\n    button.classList.add('btn-danger');\n    setTimeout(() => {\n      button.classList.remove('btn-danger');\n      button.classList.add('btn-primary');\n    }, 300);\n  };\n\n  const onRightButtonClick = (button, id, value) => {\n    button.classList.remove('btn-primary');\n    button.classList.add('btn-success');\n    setTimeout(() => {\n      resolvedArray.push(value);\n      button.classList.remove('btn-success');\n      button.classList.add('btn-primary');\n      button.disabled = true;\n      button.style.color = 'transparent';\n      button.style.background = 'transparent';\n      button.style.borderColor = 'transparent';\n      setActualId(prevState => prevState + 1);\n    }, 300);\n  };\n\n  const onPositiveTrainingResult = () => {\n    setTimeout(() => {\n      setMixedArray([]);\n      setResolved(true);\n    }, 300);\n  };\n  const onClickButtonNext = () => {\n    onResolvedTraining();\n  };\n\n  const onClickSkipButton = () => {\n    onResolvedTraining();\n  };\n  const onClickJokeSentencesTraningsButton = e => {\n    const taskId = e.currentTarget.getAttribute('value');\n    dispatch(\n      fetchSentencesTasksByJokeTaskId(\n        taskId,\n        originalLanguage.language_name,\n        translationLanguage.language_name,\n      ),\n    );\n    history.push('/sentences-trainings');\n  };\n  return (\n    <div className={styles.JokesTrainings}>\n      {taskLanguages && <ChooseTaskLanguages languages={taskLanguages} />}\n      <h3>Joke in original language</h3>\n      {!originalLanguageJoke && (\n        <h3 className={styles.warning}>no original available</h3>\n      )}\n      <p className={styles.originalLanguageJoke}>{originalLanguageJoke}</p>\n\n      <h3>Joke in translation language</h3>\n      <ul className={styles.jokeFealdsList}>\n        <li className={styles.jokeFealdsList__item}>\n          <h4 className={styles.jokeFealdHeader}>Unresolved joke</h4>\n          {!translationArray && !mixedArray && (\n            <h3 className={styles.warning}>no translation available</h3>\n          )}\n          <ul className={styles.listTags}>\n            {mixedArray.map((elem, id) => (\n              <li key={id} className={styles.listTags__item}>\n                <Button\n                  variant=\"primary\"\n                  data-id={id}\n                  onClick={onClickSentenceButton}\n                  value={elem}\n                  className={styles.listTags__button}\n                >\n                  {elem}\n                </Button>\n              </li>\n            ))}\n          </ul>\n          {resolved && (\n            <div className={styles.CongratulationBox}>\n              <TaskCongratulation\n                attempts={attempts}\n                losts={losts}\n                onClickButtonNext={onClickButtonNext}\n              />\n              <Button\n                variant=\"warning\"\n                onClick={onClickJokeSentencesTraningsButton}\n                value={jokeTask._id}\n              >\n                Practice joke sentences in sentences trainings\n              </Button>\n            </div>\n          )}\n        </li>\n        <li className={styles.jokeFealdsList__item}>\n          <h4 className={styles.jokeFealdHeader}>Resolved joke</h4>\n          <ul className={styles.listTags}>\n            {resolvedArray.map((elem, id) => (\n              <li key={id} className={styles.listTags__item}>\n                <Button variant=\"primary\" className={styles.listTags__button}>\n                  {elem}\n                </Button>\n              </li>\n            ))}\n          </ul>\n        </li>\n      </ul>\n      <Button\n        variant=\"primary\"\n        onClick={onClickSkipButton}\n        className={styles.skipButton}\n      >\n        Skip task\n      </Button>\n    </div>\n  );\n}\n","import { useState, useEffect } from 'react';\nimport ChooseLanguages from '../ChooseLanguages/ChooseLanguages';\nimport JokesList from '../JokesList/JokesList';\nimport JokeTraining from '../JokeTraining/JokeTraining';\n\nexport default function JokesTrainingsPage() {\n  useEffect(() => {\n    window.scrollBy(0, -1000);\n  }, []);\n  const [trainingPageOptionsIsOpen, setTrainingPageOptionsIsOpen] =\n    useState(true);\n  const [jokeTask, setJokeTask] = useState([]);\n  const trainTask = task => {\n    setJokeTask(task);\n    setTrainingPageOptionsIsOpen(false);\n  };\n\n  const onResolvedTraining = () => {\n    setTrainingPageOptionsIsOpen(true);\n    setJokeTask([]);\n  };\n\n  return (\n    <div>\n      <h2>Jokes trainings</h2>\n      {trainingPageOptionsIsOpen && <ChooseLanguages />}\n      {trainingPageOptionsIsOpen && <JokesList passUpTask={trainTask} />}\n      {!trainingPageOptionsIsOpen && (\n        <JokeTraining\n          jokeTask={jokeTask}\n          onResolvedTraining={onResolvedTraining}\n        />\n      )}\n    </div>\n  );\n}\n","import JokesTrainingsPage from '../../components/JokesTrainingsPage/JokesTrainingsPage';\nexport default function JokesTrainingsView() {\n  return (\n    <>\n      <JokesTrainingsPage />\n    </>\n  );\n}\n"],"names":["ChooseTaskLanguages","languages","dispatch","useDispatch","originalLanguage","useSelector","jokeTasksSelectors","translationLanguage","onClickButtonOriginalLanguage","value","language","e","setOriginalLanguage","onClickButtonTranslationLanguage","setTranslationLanguage","jsx","styles","jsxs","elem","Button","JokeTraining","jokeTask","onResolvedTraining","history","useNavigate","taskLanguages","setTaskLanguages","useState","originalLanguageJoke","setOriginalLanguageJoke","translationArray","setTranslationArray","mixedArray","setMixedArray","resolvedArray","setResolvedArray","actualId","setActualId","losts","setLosts","attempts","setAttempts","resolved","setResolved","useEffect","translation","onClickSentenceButton","buttonValue","id","onRightButtonClick","onWrongButtonClick","prevState","onPositiveTrainingResult","button","onClickButtonNext","onClickSkipButton","onClickJokeSentencesTraningsButton","taskId","fetchSentencesTasksByJokeTaskId","TaskCongratulation","JokesTrainingsPage","trainingPageOptionsIsOpen","setTrainingPageOptionsIsOpen","setJokeTask","trainTask","task","ChooseLanguages","JokesList","JokesTrainingsView","Fragment"],"mappings":"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"}