{"version":3,"file":"UserView-BV6cOmcl.js","sources":["../../src/components/DictionaryForm/DictionaryForm.jsx","../../src/components/DictionarySearch/DictionarySearch.jsx","../../src/components/UserPage/UserPage.jsx","../../src/views/UserView/UserView.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Button, Form, Table, Spinner } from 'react-bootstrap';\nimport {\n  updateTasksSet,\n  addToTasksSet,\n} from '../../redux/transcription-tasks/transcription-tasks-actions';\nimport transcriptionTasksSelectors from '../../redux/transcription-tasks/transcription-tasks-selectors';\nimport ownDictionariesSelectors from '../../redux/own-dictionaries/own-dictionaries-selectors';\nimport { addOwnDictionary } from '../../redux/own-dictionaries/own-dictionaries-operations';\nimport TasksFilter from '../TasksFilter/TasksFilter';\nimport ErrorMessage from '../ErrorMessage/ErrorMessage';\nimport { confirm } from '../Confirmation/Confirmation';\nimport styles from './DictionaryForm.module.css';\n\nexport default function DictionaryForm() {\n  const dispatch = useDispatch();\n  const [dictionaryName, setDictionaryName] = useState('');\n  const tasksSet = useSelector(\n    transcriptionTasksSelectors.getTranscriptionTasksSet,\n  );\n  const addDictionaryLoading = useSelector(\n    ownDictionariesSelectors.getAddDictionaryLoading,\n  );\n  const addDictionaryError = useSelector(\n    ownDictionariesSelectors.getAddDictionaryError,\n  );\n  const addDictionarySuccess = useSelector(\n    ownDictionariesSelectors.getAddDictionarySuccess,\n  );\n\n  const dictionaryNameHandleChange = ({ target: { value } }) => {\n    setDictionaryName(value);\n  };\n  const deleteTask = ({ target: { name } }) => {\n    const newTasksSet = tasksSet.filter(e => e._id !== name);\n    dispatch(updateTasksSet(newTasksSet));\n  };\n\n  const onAddSetToOwnDictionariesClick = async () => {\n    if (await confirm('Are you sure you want to add this dictionary?')) {\n      dispatch(\n        addOwnDictionary({\n          ownDictionaryName: dictionaryName,\n          ownDictionaryTasks: tasksSet,\n        }),\n      );\n    }\n  };\n\n  const addTaskToSet = task => {\n    if (tasksSet.findIndex(e => e._id === task._id) === -1) {\n      dispatch(addToTasksSet(task));\n    }\n  };\n\n  useEffect(() => {\n    if (addDictionarySuccess) {\n      dispatch(updateTasksSet([]));\n      setDictionaryName('');\n    }\n  }, [dispatch, addDictionarySuccess]);\n\n  return (\n    <div className={styles.dictionaryForm}>\n      <h3>Let's gather words for new dictionary</h3>\n      <div className={styles.dictionaryForm__box}>\n        <div className={styles.dictionaryForm__tasksFilterBox}>\n          <TasksFilter passUpTask={addTaskToSet} />\n        </div>\n\n        <div className={styles.tasksTableBox}>\n          <h5 className={styles.tasksTableBox__header}>New dictionary:</h5>\n          <Form autoComplete=\"off\">\n            <Form.Group className=\"mb-3\">\n              <Form.Label>Dictionary name:</Form.Label>\n              <Form.Control\n                type=\"text\"\n                name=\"dictionaryName\"\n                placeholder=\"Enter dictionary name\"\n                value={dictionaryName}\n                onChange={dictionaryNameHandleChange}\n              />\n            </Form.Group>\n          </Form>\n          <Table striped bordered hover className={styles.tasksTable}>\n            <thead>\n              <tr>\n                <td>Dictionary words:</td>\n                <td className={styles.tasksTable__tdButton}></td>\n              </tr>\n            </thead>\n            <tbody className={styles.tasksTable__tbody}>\n              {tasksSet &&\n                tasksSet.map(({ _id, eng, utrn }) => (\n                  <tr key={_id}>\n                    <td>{eng}</td>\n                    <td>\n                      <Button\n                        variant=\"danger\"\n                        size=\"sm\"\n                        name={_id}\n                        onClick={deleteTask}\n                      >\n                        Delete\n                      </Button>\n                    </td>\n                  </tr>\n                ))}\n            </tbody>\n          </Table>\n          <Button\n            className={styles.tasksTable__button}\n            onClick={onAddSetToOwnDictionariesClick}\n          >\n            {!addDictionaryLoading && <span>Add new own dictionary</span>}\n            {addDictionaryLoading && (\n              <Spinner animation=\"border\" as=\"span\" size=\"sm\" />\n            )}\n          </Button>\n\n          {addDictionaryError && <ErrorMessage message={addDictionaryError} />}\n        </div>\n      </div>\n    </div>\n  );\n}\n","import { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Button, Form, Table, Spinner } from 'react-bootstrap';\nimport ownDictionariesSelectors from '../../redux/own-dictionaries/own-dictionaries-selectors';\nimport {\n  addOwnDictionary,\n  fetchOwnDictionary,\n} from '../../redux/own-dictionaries/own-dictionaries-operations';\nimport { confirm } from '../Confirmation/Confirmation';\nimport ErrorMessage from '../ErrorMessage/ErrorMessage';\nimport styles from './DictionarySearch.module.css';\n\nexport default function DictionarySearch() {\n  const dispatch = useDispatch();\n  const [dictionaryId, setDictionaryId] = useState('');\n  const [dictionaryName, setDictionaryName] = useState('');\n\n  const ownDictionary = useSelector(ownDictionariesSelectors.getOwnDictionary);\n  const ownDictionaryLoading = useSelector(\n    ownDictionariesSelectors.getOwnDictionaryLoading,\n  );\n  const ownDictionaryError = useSelector(\n    ownDictionariesSelectors.getOwnDictionaryError,\n  );\n  const addDictionaryLoading = useSelector(\n    ownDictionariesSelectors.getAddDictionaryLoading,\n  );\n  const addDictionaryError = useSelector(\n    ownDictionariesSelectors.getAddDictionaryError,\n  );\n  const addDictionarySuccess = useSelector(\n    ownDictionariesSelectors.getAddDictionarySuccess,\n  );\n\n  const dictionaryIdHandleChange = ({ target: { value } }) => {\n    setDictionaryId(value);\n  };\n\n  const dictionaryNameHandleChange = ({ target: { value } }) => {\n    setDictionaryName(value);\n  };\n\n  const onSearchClick = () => {\n    dispatch(fetchOwnDictionary(dictionaryId));\n  };\n\n  const onAddDictionaryToOwnDictionariesClick = async () => {\n    if (await confirm('Are you sure you want to add this dictionary?')) {\n      dispatch(\n        addOwnDictionary({\n          ownDictionaryName: dictionaryName,\n          ownDictionaryTasks: ownDictionary.ownDictionaryTasks,\n        }),\n      );\n    }\n  };\n  useEffect(() => {\n    if (addDictionarySuccess) {\n      // dispatch(updateTasksSet([]));\n      setDictionaryId('');\n      setDictionaryName('');\n    }\n  }, [dispatch, addDictionarySuccess]);\n\n  return (\n    <div className={styles.dictionarySearch}>\n      <div className={styles.dictionarySearch__box}>\n        <h5 className={styles.dictionarySearch__header}>DictionarySearch:</h5>\n        <Form autoComplete=\"off\" className={styles.dictionarySearchForm}>\n          <Form.Group className=\"mb-3\">\n            <Form.Label>Search dictionary by id:</Form.Label>\n            <Form.Control\n              type=\"text\"\n              name=\"dictionaryId\"\n              placeholder=\"Enter dictionary id\"\n              value={dictionaryId}\n              onChange={dictionaryIdHandleChange}\n            />\n          </Form.Group>\n          <Button\n            variant=\"primary\"\n            onClick={onSearchClick}\n            className={styles.dictionarySearchForm__button}\n          >\n            {!ownDictionaryLoading && <span>Search</span>}\n            {ownDictionaryLoading && (\n              <Spinner animation=\"border\" as=\"span\" size=\"sm\" />\n            )}\n          </Button>\n        </Form>\n        {ownDictionaryError && (\n          <ErrorMessage\n            message={`No dictionary found with id=${dictionaryId}`}\n          />\n        )}\n      </div>\n      {!ownDictionaryError && !ownDictionaryLoading && (\n        <div className={styles.dictionarySpecifications__box}>\n          {ownDictionary.ownDictionaryTasks && (\n            <div>\n              <Table\n                striped\n                bordered\n                hover\n                className={styles.dictionarySpecifications}\n              >\n                <thead>\n                  <tr>\n                    <td>Specifications:</td>\n                    <td></td>\n                  </tr>\n                </thead>\n                <tbody className={styles.dictionarySpecifications__tbody}>\n                  <tr>\n                    <td>Dictionary name:</td>\n                    <td>{ownDictionary.ownDictionaryName}</td>\n                  </tr>\n                  <tr>\n                    <td>Dictionary id:</td>\n                    <td>{ownDictionary._id}</td>\n                  </tr>\n                  <tr>\n                    <td>Dictionary owner:</td>\n                    <td>{ownDictionary.ownDictionaryOwner.name}</td>\n                  </tr>\n                  <tr>\n                    <td>Words quantity:</td>\n                    <td>{ownDictionary.ownDictionaryTasks.length}</td>\n                  </tr>\n                </tbody>\n              </Table>\n              <Form autoComplete=\"off\">\n                <Form.Group className=\"mb-3\">\n                  <Form.Label>Add to own dictionaries with name:</Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    name=\"dictionaryName\"\n                    placeholder=\"Enter dictionary name\"\n                    value={dictionaryName}\n                    onChange={dictionaryNameHandleChange}\n                  />\n                </Form.Group>\n                <Button\n                  className={styles.dictionarySpecificationsForm__button}\n                  onClick={onAddDictionaryToOwnDictionariesClick}\n                >\n                  {!addDictionaryLoading && <span>Add new own dictionary</span>}\n                  {addDictionaryLoading && (\n                    <Spinner animation=\"border\" as=\"span\" size=\"sm\" />\n                  )}\n                </Button>\n              </Form>\n            </div>\n          )}\n          {addDictionaryError && <ErrorMessage message={addDictionaryError} />}\n        </div>\n      )}\n    </div>\n  );\n}\n","import { useState, useEffect } from 'react';\nimport OwnDictionaries from '../OwnDictionaries/OwnDictionaries';\nimport DictionaryForm from '../DictionaryForm/DictionaryForm';\nimport DictionarySearch from '../DictionarySearch/DictionarySearch';\nimport { Tabs, Tab, Spinner } from 'react-bootstrap';\n\nexport default function UserPage() {\n  useEffect(() => {\n    window.scrollBy(0, -1000);\n  }, []);\n\n  const [keyUserTabs, setKeyUserTabs] = useState('User profile');\n  const [keyOwnDictionariesTabs, setKeyOwnDictionariesTabs] =\n    useState('Dictionaries list');\n  return (\n    <div>\n      <h2>User page</h2>\n      <Tabs\n        id=\"user-tabs\"\n        activeKey={keyUserTabs}\n        onSelect={k => setKeyUserTabs(k)}\n        className=\"mb-3\"\n      >\n        <Tab\n          eventKey=\"own-dictionaries\"\n          id=\"own-dictionaries\"\n          title=\"Own dictionaries\"\n        >\n          <h3>Own dictionaries:</h3>\n\n          <Tabs\n            id=\"own-dictionaries\"\n            activeKey={keyOwnDictionariesTabs}\n            onSelect={k => setKeyOwnDictionariesTabs(k)}\n            className=\"mb-3\"\n          >\n            <Tab eventKey=\"Dictionaries list\" title=\"Dictionaries list\">\n              <OwnDictionaries advancedMode={true} />\n            </Tab>\n\n            <Tab eventKey=\"dictionary-form\" title=\"Dictionary form\">\n              <DictionaryForm />\n            </Tab>\n\n            <Tab eventKey=\"Dictionary search\" title=\"Dictionary search\">\n              <DictionarySearch />\n            </Tab>\n          </Tabs>\n        </Tab>\n\n        <Tab eventKey=\"User profile\" title=\"User profile\">\n          <h3>User profile:</h3>\n          <Spinner animation=\"grow\" />\n          <p>under development</p>\n        </Tab>\n      </Tabs>\n    </div>\n  );\n}\n","import UserPage from '../../components/UserPage/UserPage';\n\nexport default function UserView() {\n  return (\n    <>\n      <UserPage />\n    </>\n  );\n}\n"],"names":["DictionaryForm","dispatch","useDispatch","dictionaryName","setDictionaryName","useState","tasksSet","useSelector","transcriptionTasksSelectors","addDictionaryLoading","ownDictionariesSelectors","addDictionaryError","addDictionarySuccess","dictionaryNameHandleChange","value","deleteTask","name","newTasksSet","e","updateTasksSet","onAddSetToOwnDictionariesClick","confirm","addOwnDictionary","addTaskToSet","task","addToTasksSet","useEffect","jsxs","styles","jsx","TasksFilter","Form","Table","_id","eng","utrn","Button","Spinner","ErrorMessage","DictionarySearch","dictionaryId","setDictionaryId","ownDictionary","ownDictionaryLoading","ownDictionaryError","dictionaryIdHandleChange","onSearchClick","fetchOwnDictionary","onAddDictionaryToOwnDictionariesClick","UserPage","keyUserTabs","setKeyUserTabs","keyOwnDictionariesTabs","setKeyOwnDictionariesTabs","Tabs","k","Tab","OwnDictionaries","UserView","Fragment"],"mappings":"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"}