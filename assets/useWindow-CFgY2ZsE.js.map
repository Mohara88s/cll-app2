{"version":3,"file":"useWindow-CFgY2ZsE.js","sources":["../../node_modules/@restart/hooks/esm/useCallbackRef.js","../../node_modules/@restart/hooks/esm/useMounted.js","../../node_modules/@restart/hooks/esm/usePrevious.js","../../node_modules/@restart/hooks/esm/useIsomorphicEffect.js","../../node_modules/dom-helpers/esm/querySelectorAll.js","../../node_modules/dom-helpers/esm/contains.js","../../node_modules/@restart/ui/esm/DataKey.js","../../node_modules/@restart/ui/esm/useWindow.js"],"sourcesContent":["import { useState } from 'react';\n\n/**\n * A convenience hook around `useState` designed to be paired with\n * the component [callback ref](https://reactjs.org/docs/refs-and-the-dom.html#callback-refs) api.\n * Callback refs are useful over `useRef()` when you need to respond to the ref being set\n * instead of lazily accessing it in an effect.\n *\n * ```ts\n * const [element, attachRef] = useCallbackRef<HTMLDivElement>()\n *\n * useEffect(() => {\n *   if (!element) return\n *\n *   const calendar = new FullCalendar.Calendar(element)\n *\n *   return () => {\n *     calendar.destroy()\n *   }\n * }, [element])\n *\n * return <div ref={attachRef} />\n * ```\n *\n * @category refs\n */\nexport default function useCallbackRef() {\n  return useState(null);\n}","import { useRef, useEffect } from 'react';\n\n/**\n * Track whether a component is current mounted. Generally less preferable than\n * properlly canceling effects so they don't run after a component is unmounted,\n * but helpful in cases where that isn't feasible, such as a `Promise` resolution.\n *\n * @returns a function that returns the current isMounted state of the component\n *\n * ```ts\n * const [data, setData] = useState(null)\n * const isMounted = useMounted()\n *\n * useEffect(() => {\n *   fetchdata().then((newData) => {\n *      if (isMounted()) {\n *        setData(newData);\n *      }\n *   })\n * })\n * ```\n */\nexport default function useMounted() {\n  const mounted = useRef(true);\n  const isMounted = useRef(() => mounted.current);\n  useEffect(() => {\n    mounted.current = true;\n    return () => {\n      mounted.current = false;\n    };\n  }, []);\n  return isMounted.current;\n}","import { useEffect, useRef } from 'react';\n\n/**\n * Store the last of some value. Tracked via a `Ref` only updating it\n * after the component renders.\n *\n * Helpful if you need to compare a prop value to it's previous value during render.\n *\n * ```ts\n * function Component(props) {\n *   const lastProps = usePrevious(props)\n *\n *   if (lastProps.foo !== props.foo)\n *     resetValueFromProps(props.foo)\n * }\n * ```\n *\n * @param value the value to track\n */\nexport default function usePrevious(value) {\n  const ref = useRef(null);\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n}","import { useEffect, useLayoutEffect } from 'react';\nconst isReactNative = typeof global !== 'undefined' &&\n// @ts-ignore\nglobal.navigator &&\n// @ts-ignore\nglobal.navigator.product === 'ReactNative';\nconst isDOM = typeof document !== 'undefined';\n\n/**\n * Is `useLayoutEffect` in a DOM or React Native environment, otherwise resolves to useEffect\n * Only useful to avoid the console warning.\n *\n * PREFER `useEffect` UNLESS YOU KNOW WHAT YOU ARE DOING.\n *\n * @category effects\n */\nexport default isDOM || isReactNative ? useLayoutEffect : useEffect;","var toArray = Function.prototype.bind.call(Function.prototype.call, [].slice);\n/**\n * Runs `querySelectorAll` on a given element.\n * \n * @param element the element\n * @param selector the selector\n */\n\nexport default function qsa(element, selector) {\n  return toArray(element.querySelectorAll(selector));\n}","/* eslint-disable no-bitwise, no-cond-assign */\n\n/**\n * Checks if an element contains another given element.\n * \n * @param context the context element\n * @param node the element to check\n */\nexport default function contains(context, node) {\n  // HTML DOM and SVG DOM may have different support levels,\n  // so we need to check on context instead of a document root element.\n  if (context.contains) return context.contains(node);\n  if (context.compareDocumentPosition) return context === node || !!(context.compareDocumentPosition(node) & 16);\n}","export const ATTRIBUTE_PREFIX = `data-rr-ui-`;\nexport const PROPERTY_PREFIX = `rrUi`;\nexport function dataAttr(property) {\n  return `${ATTRIBUTE_PREFIX}${property}`;\n}\nexport function dataProp(property) {\n  return `${PROPERTY_PREFIX}${property}`;\n}","import { createContext, useContext } from 'react';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nconst Context = /*#__PURE__*/createContext(canUseDOM ? window : undefined);\nexport const WindowProvider = Context.Provider;\n\n/**\n * The document \"window\" placed in React context. Helpful for determining\n * SSR context, or when rendering into an iframe.\n *\n * @returns the current window\n */\nexport default function useWindow() {\n  return useContext(Context);\n}"],"names":["useCallbackRef","useState","useMounted","mounted","useRef","isMounted","useEffect","usePrevious","value","ref","isReactNative","isDOM","useIsomorphicEffect","useLayoutEffect","toArray","qsa","element","selector","contains","context","node","ATTRIBUTE_PREFIX","PROPERTY_PREFIX","dataAttr","property","dataProp","Context","createContext","canUseDOM","useWindow","useContext"],"mappings":"uFA0Be,SAASA,GAAiB,CACvC,OAAOC,EAAAA,SAAS,IAAI,CACtB,CCNe,SAASC,GAAa,CACnC,MAAMC,EAAUC,EAAM,OAAC,EAAI,EACrBC,EAAYD,EAAAA,OAAO,IAAMD,EAAQ,OAAO,EAC9CG,OAAAA,EAAAA,UAAU,KACRH,EAAQ,QAAU,GACX,IAAM,CACXA,EAAQ,QAAU,EACnB,GACA,EAAE,EACEE,EAAU,OACnB,CCbe,SAASE,EAAYC,EAAO,CACzC,MAAMC,EAAML,EAAM,OAAC,IAAI,EACvBE,OAAAA,EAAAA,UAAU,IAAM,CACdG,EAAI,QAAUD,CAClB,CAAG,EACMC,EAAI,OACb,CCxBA,MAAMC,EAAgB,OAAO,OAAW,KAExC,OAAO,WAEP,OAAO,UAAU,UAAY,cACvBC,EAAQ,OAAO,SAAa,IAUlCC,EAAeD,GAASD,EAAgBG,EAAAA,gBAAkBP,EAAS,UChBnE,IAAIQ,EAAU,SAAS,UAAU,KAAK,KAAK,SAAS,UAAU,KAAM,CAAE,EAAC,KAAK,EAQ7D,SAASC,EAAIC,EAASC,EAAU,CAC7C,OAAOH,EAAQE,EAAQ,iBAAiBC,CAAQ,CAAC,CACnD,CCFe,SAASC,EAASC,EAASC,EAAM,CAG9C,GAAID,EAAQ,SAAU,OAAOA,EAAQ,SAASC,CAAI,EAClD,GAAID,EAAQ,wBAAyB,OAAOA,IAAYC,GAAQ,CAAC,EAAED,EAAQ,wBAAwBC,CAAI,EAAI,GAC7G,CCbO,MAAMC,EAAmB,cACnBC,EAAkB,OACxB,SAASC,EAASC,EAAU,CACjC,MAAO,GAAGH,CAAgB,GAAGG,CAAQ,EACvC,CACO,SAASC,EAASD,EAAU,CACjC,MAAO,GAAGF,CAAe,GAAGE,CAAQ,EACtC,CCLA,MAAME,EAAuBC,EAAa,cAACC,EAAY,OAAS,MAAS,EAC3CF,EAAQ,SAQvB,SAASG,GAAY,CAClC,OAAOC,EAAAA,WAAWJ,CAAO,CAC3B","x_google_ignoreList":[0,1,2,3,4,5,6,7]}